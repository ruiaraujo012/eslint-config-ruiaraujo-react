module.exports = {
  root: true,
  env: {
    browser: true,
    es2021: true,
  },
  extends: [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:jsx-a11y/recommended",
    "prettier",
  ],
  parser: "@typescript-eslint/parser",
  parserOptions: {
    ecmaFeatures: {
      jsx: true,
      arrowFunctions: true,
    },
    ecmaVersion: 2021,
    sourceType: "module",
  },
  plugins: [
    "react",
    "@typescript-eslint",
    "import",
    "react-hooks",
    "sort-class-members",
    "sort-imports-es6-autofix",
    "jsx-a11y",
    "unused-imports",
    "prettier",
  ],
  ignorePatterns: [
    "**/generated/**",
    "**/build/**",
    "**/types/**",
    "**/dist/**",
  ],
  rules: {
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": ["error"],
    "jsx-quotes": ["error", "prefer-single"],
    "react/require-default-props": "off",
    "no-unused-vars": "off",
    "unused-imports/no-unused-imports": "warn",
    "unused-imports/no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": "warn",
    "prettier/prettier": [
      "error",
      {
        endOfLine: "auto",
      },
    ],
    "valid-jsdoc": "off",
    "require-await": "warn",
    "accessor-pairs": "error",
    "block-scoped-var": "error",
    curly: "error",
    "default-case": "error",
    "dot-notation": "error",
    eqeqeq: ["error", "smart"],
    "func-style": ["error", "declaration", { allowArrowFunctions: true }],
    "id-length": [
      "warn",
      { exceptions: ["_", "e", "i", "j", "m", "p", "t", "x", "y", "z"] },
    ],
    "id-match": [
      "error",
      "^_$|^[$_a-zA-Z]*[_a-zA-Z0-9]*[a-zA-Z0-9]*$|^[A-Z][_A-Z0-9]+[A-Z0-9]$",
      { onlyDeclarations: true, properties: true },
    ],
    "sort-imports-es6-autofix/sort-imports-es6": [
      "warn",
      {
        ignoreCase: false,
        ignoreMemberSort: false,
        memberSyntaxSortOrder: ["none", "all", "multiple", "single"],
      },
    ],
    "max-depth": "error",
    "max-params": ["error", 4],
    "no-alert": "error",
    "no-array-constructor": "error",
    "no-bitwise": "error",
    "no-caller": "error",
    "no-cond-assign": ["error", "always"],
    "no-div-regex": "error",
    "no-duplicate-imports": "error",
    "no-else-return": "error",
    "no-eq-null": "error",
    "no-eval": "error",
    "no-extend-native": "error",
    "no-extra-bind": "error",
    "no-implied-eval": "error",
    "no-inline-comments": "warn",
    "no-iterator": "error",
    "no-labels": "error",
    "no-lone-blocks": "error",
    "no-lonely-if": "error",
    "no-loop-func": "error",
    "no-mixed-requires": "error",
    "no-multi-str": "error",
    "no-nested-ternary": "error",
    "no-new": "error",
    "no-new-func": "error",
    "no-new-object": "error",
    "no-new-require": "error",
    "no-new-wrappers": "error",
    "no-octal-escape": "error",
    "no-path-concat": "error",
    "no-process-env": "error",
    "no-process-exit": "error",
    "no-proto": "error",
    "no-restricted-modules": "error",
    "no-return-assign": "error",
    "no-script-url": "error",
    "no-self-compare": "error",
    "no-sequences": "error",
    "no-sync": "error",
    "no-tabs": ["error", { allowIndentationTabs: true }],
    "no-throw-literal": "error",
    "no-undef-init": "error",
    "no-underscore-dangle": "error",
    "no-unneeded-ternary": "error",
    "no-unused-expressions": "error",
    "no-useless-call": "error",
    "no-useless-concat": "error",
    "no-var": "error",
    "no-void": "error",
    "object-shorthand": "error",
    "operator-assignment": "error",
    "padding-line-between-statements": [
      "error",
      { blankLine: "always", next: "return", prev: "*" },
      { blankLine: "always", next: "*", prev: ["const", "let", "var"] },
      {
        blankLine: "any",
        next: ["const", "let", "var"],
        prev: ["const", "let", "var"],
      },
    ],
    "prefer-const": "error",
    "prefer-destructuring": [
      "error",
      {
        AssignmentExpression: { array: false, object: false },
        VariableDeclarator: { array: true, object: true },
      },
      {
        enforceForRenamedProperties: false,
      },
    ],
    "prefer-spread": "error",
    "prefer-template": "error",
    radix: "error",
    "require-atomic-updates": "off",
    "sort-keys": ["warn", "asc", { natural: true }],
    "spaced-comment": "error",
    "vars-on-top": "error",
    yoda: "error",
    "import/default": "error",
    "import/named": "off",
    "import/no-unresolved": "off",
    "new-cap": ["error", { capIsNewExceptions: ["BigNumber"] }],
    "react/display-name": "error",
    "react/jsx-boolean-value": "error",
    "react/jsx-curly-brace-presence": [
      "error",
      {
        props: "never",
      },
    ],
    "react/jsx-key": "error",
    "react/jsx-no-duplicate-props": "error",
    "react/jsx-no-undef": "error",
    "react/jsx-sort-props": "warn",
    "react/jsx-uses-react": "off",
    "react/jsx-uses-vars": "error",
    "react/no-danger": "error",
    "react/no-direct-mutation-state": "error",
    "react/no-string-refs": "error",
    "react/no-unknown-property": "error",
    "react/prefer-es6-class": "error",
    "react/prefer-stateless-function": "error",
    "react/react-in-jsx-scope": "off",
    "react/self-closing-comp": "error",
    "react/sort-prop-types": "warn",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    /* eslint-disable sort-keys */
    "sort-class-members/sort-class-members": [
      "warn",
      {
        order: [
          "[static-properties-alpha]",
          "[static-methods-alpha]",
          "[properties-alpha]",
          "[constructor]",
          "[methods-alpha]",
        ],
        groups: {
          "static-properties-alpha": [
            { type: "property", static: true, sort: "alphabetical" },
          ],
          "static-methods-alpha": [
            { type: "method", static: true, sort: "alphabetical" },
          ],
          "properties-alpha": [
            { type: "property", propertyType: "Literal", sort: "alphabetical" },
          ],
          "methods-alpha": [{ type: "method", sort: "alphabetical" }],
        },
      },
    ],
    /* eslint-enable sort-keys */
    "rulesdir/explicit-sinon-use-fake-timers": "off",
    "@typescript-eslint/no-namespace": "off",
  },
  settings: {
    react: {
      version: "detect", // Tells eslint-plugin-react to automatically detect the version of React to use
    },
    "import/resolver": {
      node: {
        extensions: [".js", ".jsx", ".ts", ".tsx"],
        paths: ["./src"],
      },
    },
  },
};
